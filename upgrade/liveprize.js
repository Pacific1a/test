/**
 * Smooth Cyclical Conveyor - –ü–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–π –∫–æ–Ω–≤–µ–π–µ—Ä –ø—Ä–∏–∑–æ–≤
 * –§–∏—à–∫–∏ –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ –¥–≤–∏–∂—É—Ç—Å—è –ø–æ –∫—Ä—É–≥—É, –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –º–µ–Ω—è—è –ø–æ—Ä—è–¥–æ–∫
 */

class SmoothCyclicalConveyor {
    constructor() {
        this.isActive = false;
        this.animationId = null;
        this.streakContainer = null;
        this.conveyorContainer = null;
        this.conveyorTrack = null;
        this.lastFrameTime = null;
        
        // –í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–∏–∑—ã –∏–∑ –ø–∞–ø–∫–∏ main/img
        this.prizesPool = [
            'img/very-high-prize.svg',
            'img/very-high-prize.svg', 
            'img/medium-prize.svg',
            'img/low-prize.svg',
            'img/very-low-prize.svg',
            'img/ultra-low-prize.svg'
        ];
        
        this.conveyorSpeed = 0.8; // –Ω–µ–º–Ω–æ–≥–æ —É–≤–µ–ª–∏—á–∏–ª —Å–∫–æ—Ä–æ—Å—Ç—å –¥–ª—è –ª—É—á—à–µ–π –ø–ª–∞–≤–Ω–æ—Å—Ç–∏
        this.prizeWidth = 70; // —à–∏—Ä–∏–Ω–∞ –ø—Ä–∏–∑–∞ —Å –æ—Ç—Å—Ç—É–ø–æ–º
        this.position = 0;
        this.lastShuffleTime = 0;
        this.shuffleInterval = 1000; // —É–≤–µ–ª–∏—á–∏–ª –∏–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏—è–º–∏
        
        this.init();
    }
    
    init() {
        this.streakContainer = document.querySelector('.streak');
        if (!this.streakContainer) {
            console.warn('–ë–ª–æ–∫ .streak –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }
        
        this.setupStyles();
        this.setupConveyor();
        this.startConveyor();
    }
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª–µ–π –¥–ª—è –ø–ª–∞–≤–Ω–æ–≥–æ –∫–æ–Ω–≤–µ–π–µ—Ä–∞
    setupStyles() {
        const style = document.createElement('style');
        style.textContent = `
            .streak {
                position: relative;
                display: flex;
                align-items: center;
                gap: 10px;
            }
            
            .smooth-conveyor-container {
                flex: 1;
                height: 60px;
                overflow: hidden;
                position: relative;
                background: transparent;
            }
            
            .smooth-conveyor-track {
                position: absolute;
                top: 0;
                left: 0;
                height: 100%;
                display: flex;
                align-items: center;
                gap: 15px;
                will-change: transform;
                backface-visibility: hidden;
                perspective: 1000px;
                transform-style: preserve-3d;
            }
            
            .smooth-prize {
                flex-shrink: 0;
                position: relative;
            }
            
            .smooth-prize img {
                display: block;
                transition: filter 0.3s ease;
                /* –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã –∏–∑ CSS */
            }
            
            .smooth-prize img:hover {
                filter: brightness(1.1) saturate(1.1);
            }
            
            .circle {
                animation: pulse 2s infinite;
            }
            
            @keyframes pulse {
                0%, 100% { 
                    opacity: 1; 
                    transform: scale(1); 
                }
                50% { 
                    opacity: 0.7; 
                    transform: scale(1.2); 
                }
            }
        `;
        document.head.appendChild(style);
    }
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω–≤–µ–π–µ—Ä–∞
setupConveyor() {
    const existingPrizes = this.streakContainer.querySelectorAll('.img-2, .img-3');
    const frameElement = this.streakContainer.querySelector('.frame');

    // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–æ–Ω–≤–µ–π–µ—Ä–∞
    const conveyorContainer = document.createElement('div');
    conveyorContainer.className = 'smooth-conveyor-container';

    // –°–æ–∑–¥–∞–µ–º –¥–≤–∏–∂—É—â—É—é—Å—è –¥–æ—Ä–æ–∂–∫—É
    const conveyorTrack = document.createElement('div');
    conveyorTrack.className = 'smooth-conveyor-track';

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ –î–û –≤—ã–∑–æ–≤–∞ updateConveyorDOM
    this.conveyorContainer = conveyorContainer;
    this.conveyorTrack = conveyorTrack;

    // –ú–∞—Å—Å–∏–≤ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–∏–∑–æ–≤
    this.activePrizes = [];

    existingPrizes.forEach((prize) => {
        this.activePrizes.push({
            src: prize.src,
            className: prize.className
        });
        prize.remove();
    });

    // –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∏–∑—ã –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è
    for (let i = 0; i < 8; i++) {
        const randomPrize = this.getRandomPrize();
        this.activePrizes.push({
            src: randomPrize,
            className: this.getPrizeClass(randomPrize)
        });
    }

    // –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –æ–±–Ω–æ–≤–ª—è—Ç—å DOM
    this.updateConveyorDOM();

    // –î–æ–±–∞–≤–ª—è–µ–º –¥–æ—Ä–æ–∂–∫—É –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    conveyorContainer.appendChild(conveyorTrack);

    // –í—Å—Ç–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    if (frameElement) {
        frameElement.insertAdjacentElement('afterend', conveyorContainer);
    } else {
        this.streakContainer.appendChild(conveyorContainer);
    }

    // –ù–∞—á–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è
    this.position = 0;
    if (this.conveyorTrack) {
        this.conveyorTrack.style.transform = 'translate3d(0,0,0)';
    }
}

    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ DOM —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∫–æ–Ω–≤–µ–π–µ—Ä–∞
    updateConveyorDOM() {
        if (!this.conveyorTrack) return;
        
        // –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        this.conveyorTrack.innerHTML = '';
        
        // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –≤—Å–µ—Ö –ø—Ä–∏–∑–æ–≤ (–¥—É–±–ª–∏—Ä—É–µ–º –¥–ª—è –±–µ—Å—à–æ–≤–Ω–æ—Å—Ç–∏)
        const allPrizes = [...this.activePrizes, ...this.activePrizes];
        
        allPrizes.forEach(prize => {
            const conveyorPrize = this.createConveyorPrize(prize.src, prize.className);
            this.conveyorTrack.appendChild(conveyorPrize);
        });
    }
    
    // –°–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –ø—Ä–∏–∑–∞ –¥–ª—è –∫–æ–Ω–≤–µ–π–µ—Ä–∞
    createConveyorPrize(prizeSrc, className) {
        const conveyorPrize = document.createElement('div');
        conveyorPrize.className = 'smooth-prize';
        
        const img = document.createElement('img');
        img.src = prizeSrc;
        img.className = className;
        
        conveyorPrize.appendChild(img);
        
        return conveyorPrize;
    }
    
    // –ó–∞–ø—É—Å–∫ –∫–æ–Ω–≤–µ–π–µ—Ä–∞
    startConveyor() {
        this.isActive = true;
        this.lastShuffleTime = Date.now();
        this.animate();
    }
    
    // –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω–≤–µ–π–µ—Ä–∞
    stopConveyor() {
        this.isActive = false;
        if (this.animationId) {
            cancelAnimationFrame(this.animationId);
        }
    }
    
    animate() {
        if (!this.isActive) return;
    
        const currentTime = performance.now();
        const deltaTime = currentTime - (this.lastFrameTime || currentTime);
        this.lastFrameTime = currentTime;
    
        this.position -= this.conveyorSpeed * (deltaTime / 16);
    
        const totalWidth = this.activePrizes.length * this.prizeWidth;
    
        // ‚ö° –ó–¥–µ—Å—å —Å–±—Ä–æ—Å –¥–µ–ª–∞–µ–º —Ç–æ–ª—å–∫–æ –∫–æ–≥–¥–∞ —Å–º–µ—Å—Ç–∏–ª–∏—Å—å –Ω–∞ —à–∏—Ä–∏–Ω—É –ø–æ–ª–æ–≤–∏–Ω—ã —Ç—Ä–µ–∫–∞
        if (Math.abs(this.position) >= totalWidth) {
            this.position = 0;
        }
    
        if (this.conveyorTrack) {
            this.conveyorTrack.style.transition = 'none';
            this.conveyorTrack.style.transform = `translate3d(${this.position}px, 0, 0)`;
        }
    
        this.animationId = requestAnimationFrame(() => this.animate());
    }
    
    
    
    // –£–ø—Ä–æ—â–µ–Ω–Ω–æ–µ –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏–µ –±–µ–∑ –∞–Ω–∏–º–∞—Ü–∏–∏ —Å–¥–≤–∏–≥–∞
    startSmoothShuffle() {
        if (this.isShuffling) return;
        
        this.isShuffling = true;
        
        // –ú–µ–Ω—è–µ–º –ø—Ä–∏–∑—ã –º–µ—Å—Ç–∞–º–∏
        this.shufflePrizes();
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏—é –≤ –Ω–∞—á–∞–ª–æ
        this.position = 0;
        if (this.conveyorTrack) {
            this.conveyorTrack.style.transition = 'none';
            this.conveyorTrack.style.transform = 'translate3d(0, 0, 0)';
            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —Ä–µ—Ñ–ª–æ—É
            this.conveyorTrack.offsetHeight;
        }
        
        this.isShuffling = false;
    }
    
    // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏–µ –ø—Ä–∏–∑–æ–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ—Ä—è–¥–∫–∞
    shufflePrizes() {
        // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –º–∞—Å—Å–∏–≤ –ø—Ä–∏–∑–æ–≤
        const shuffled = [...this.activePrizes];
        
        // –ê–ª–≥–æ—Ä–∏—Ç–º Fisher-Yates –¥–ª—è –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏—è
        for (let i = shuffled.length - 1; i > 0; i--) {
            const j = Math.floor(Math.random() * (i + 1));
            [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –º–∞—Å—Å–∏–≤ –ø—Ä–∏–∑–æ–≤
        this.activePrizes = shuffled;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º DOM
        this.updateConveyorDOM();
        
        console.log('üîÑ –ü–æ—Ä—è–¥–æ–∫ –ø—Ä–∏–∑–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω');
    }
    
    // –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ CSS –∫–ª–∞—Å—Å–∞ –¥–ª—è –ø—Ä–∏–∑–∞
    getPrizeClass(prizeSrc) {
        // –î–ª—è low, very-low, ultra-low –∏—Å–ø–æ–ª—å–∑—É–µ–º img-3
        if (prizeSrc.includes('low-prize.svg') || 
            prizeSrc.includes('very-low-prize.svg') || 
            prizeSrc.includes('ultra-low-prize.svg')) {
            return 'img-3';
        }
        // –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∏—Å–ø–æ–ª—å–∑—É–µ–º img-2
        return 'img-2';
    }
    
    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø—Ä–∏–∑–∞
    getRandomPrize() {
        return this.prizesPool[Math.floor(Math.random() * this.prizesPool.length)];
    }
    
    // –ü—É–±–ª–∏—á–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    pause() {
        this.stopConveyor();
        console.log('üõë –ö–æ–Ω–≤–µ–π–µ—Ä –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    }
    
    resume() {
        if (!this.isActive) {
            this.startConveyor();
            console.log('‚ñ∂Ô∏è –ö–æ–Ω–≤–µ–π–µ—Ä –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω');
        }
    }
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏ –∫–æ–Ω–≤–µ–π–µ—Ä–∞
    setSpeed(pixelsPerFrame) {
        this.conveyorSpeed = pixelsPerFrame;
        console.log(`‚ö° –°–∫–æ—Ä–æ—Å—Ç—å –∫–æ–Ω–≤–µ–π–µ—Ä–∞: ${pixelsPerFrame} –ø–∏–∫—Å/–∫–∞–¥—Ä`);
    }
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏—è
    setShuffleInterval(milliseconds) {
        this.shuffleInterval = milliseconds;
        console.log(`üîÑ –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏—è: ${milliseconds}–º—Å`);
    }
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏–µ
    triggerShuffle() {
        this.shufflePrizes();
        console.log('üé∞ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏–µ –ø—Ä–∏–∑–æ–≤');
    }
    
    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–∏–∑–∞ –≤ –ø—É–ª
    addPrize(prizePath) {
        if (!this.prizesPool.includes(prizePath)) {
            this.prizesPool.push(prizePath);
            console.log(`‚ûï –î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π –ø—Ä–∏–∑: ${prizePath}`);
        }
    }
    
    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Å–ø–∏—Å–∫–∞ –ø—Ä–∏–∑–æ–≤
    getPrizes() {
        return [...this.prizesPool];
    }
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ DOM
    setTimeout(() => {
        window.SmoothConveyor = new SmoothCyclicalConveyor();
        console.log('üé∞ –ü–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–π –∫–æ–Ω–≤–µ–π–µ—Ä –∑–∞–ø—É—â–µ–Ω!');
        console.log('üìÅ –ü—Ä–∏–∑—ã –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –∏–∑ –ø–∞–ø–∫–∏: main/img/');
        console.log('üîÑ –ü–æ—Ä—è–¥–æ–∫ –ø—Ä–∏–∑–æ–≤ –º–µ–Ω—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 4 —Å–µ–∫—É–Ω–¥—ã');
        console.log('üéÆ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: window.SmoothConveyor.pause() / .resume() / .triggerShuffle()');
    }, 300);
});
